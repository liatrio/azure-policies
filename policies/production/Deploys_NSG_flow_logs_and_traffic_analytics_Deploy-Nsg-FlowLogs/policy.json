{
 "properties": {
  "displayName": "Deploys NSG flow logs and traffic analytics",
  "policyType": "Custom",
  "mode": "Indexed",
  "description": "Deploys NSG flow logs and traffic analytics to a storageaccountid with a specfied retention period.",
  "metadata": {
   "category": "Monitoring",
   "version": "1.0.0",
   "updatedBy": null,
   "updatedOn": null
  },
  "parameters": {
   "effect": {
    "type": "String",
    "metadata": {
     "description": "Enable or disable the execution of the policy",
     "displayName": "Effect"
    },
    "allowedValues": [
     "DeployIfNotExists",
     "Disabled"
    ],
    "defaultValue": "DeployIfNotExists"
   },
   "flowAnalyticsEnabled": {
    "type": "Boolean",
    "metadata": {
     "displayName": "Enable Traffic Analytics"
    },
    "defaultValue": false
   },
   "logAnalytics": {
    "type": "String",
    "metadata": {
     "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
     "displayName": "Resource ID of Log Analytics workspace",
     "strongType": "omsWorkspace"
    },
    "defaultValue": ""
   },
   "retention": {
    "type": "Integer",
    "metadata": {
     "displayName": "Retention"
    },
    "defaultValue": 5
   },
   "storageAccountResourceId": {
    "type": "String",
    "metadata": {
     "displayName": "Storage Account Resource Id",
     "strongType": "Microsoft.Storage/storageAccounts"
    }
   },
   "trafficAnalyticsInterval": {
    "type": "Integer",
    "metadata": {
     "displayName": "Traffic Analytics processing interval mins (10/60)"
    },
    "defaultValue": 60
   }
  },
  "policyRule": {
   "if": {
    "equals": "Microsoft.Network/networkSecurityGroups",
    "field": "type"
   },
   "then": {
    "details": {
     "deployment": {
      "properties": {
       "mode": "Incremental",
       "parameters": {
        "flowAnalyticsEnabled": {
         "value": "[parameters('flowAnalyticsEnabled')]"
        },
        "location": {
         "value": "[field('location')]"
        },
        "logAnalytics": {
         "value": "[parameters('logAnalytics')]"
        },
        "networkSecurityGroupName": {
         "value": "[field('name')]"
        },
        "resourceGroupName": {
         "value": "[resourceGroup().name]"
        },
        "retention": {
         "value": "[parameters('retention')]"
        },
        "storageAccountResourceId": {
         "value": "[parameters('storageAccountResourceId')]"
        },
        "trafficAnalyticsInterval": {
         "value": "[parameters('trafficAnalyticsInterval')]"
        }
       },
       "template": {
        "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "parameters": {
         "flowAnalyticsEnabled": {
          "type": "bool"
         },
         "location": {
          "type": "String"
         },
         "logAnalytics": {
          "type": "String"
         },
         "networkSecurityGroupName": {
          "type": "String"
         },
         "resourceGroupName": {
          "type": "String"
         },
         "retention": {
          "type": "int"
         },
         "storageAccountResourceId": {
          "type": "String"
         },
         "trafficAnalyticsInterval": {
          "type": "int"
         }
        },
        "resources": [
         {
          "apiVersion": "2020-05-01",
          "location": "[parameters('location')]",
          "name": "[take(concat('NetworkWatcher_', toLower(parameters('location')),  '/', parameters('networkSecurityGroupName'), '-', parameters('resourceGroupName'), '-flowlog' ), 80)]",
          "properties": {
           "enabled": true,
           "flowAnalyticsConfiguration": {
            "networkWatcherFlowAnalyticsConfiguration": {
             "enabled": "[bool(parameters('flowAnalyticsEnabled'))]",
             "trafficAnalyticsInterval": "[parameters('trafficAnalyticsInterval')]",
             "workspaceId": "[if(not(empty(parameters('logAnalytics'))), reference(parameters('logAnalytics'), '2020-03-01-preview', 'Full').properties.customerId, json('null')) ]",
             "workspaceRegion": "[if(not(empty(parameters('logAnalytics'))), reference(parameters('logAnalytics'), '2020-03-01-preview', 'Full').location, json('null')) ]",
             "workspaceResourceId": "[if(not(empty(parameters('logAnalytics'))), parameters('logAnalytics'), json('null'))]"
            }
           },
           "format": {
            "type": "JSON",
            "version": 2
           },
           "retentionPolicy": {
            "days": "[parameters('retention')]",
            "enabled": true
           },
           "storageId": "[parameters('storageAccountResourceId')]",
           "targetResourceId": "[resourceId(parameters('resourceGroupName'), 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
          },
          "type": "Microsoft.Network/networkWatchers/flowLogs"
         }
        ],
        "variables": {}
       }
      }
     },
     "existenceCondition": {
      "allOf": [
       {
        "equals": "true",
        "field": "Microsoft.Network/networkWatchers/flowLogs/enabled"
       },
       {
        "equals": "[parameters('flowAnalyticsEnabled')]",
        "field": "Microsoft.Network/networkWatchers/flowLogs/flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.enabled"
       }
      ]
     },
     "resourceGroupName": "NetworkWatcherRG",
     "roleDefinitionIds": [
      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
     ],
     "type": "Microsoft.Network/networkWatchers/flowLogs"
    },
    "effect": "[parameters('effect')]"
   }
  }
 },
 "id": "/providers/Microsoft.Management/managementGroups/management_group_id/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs",
 "type": "Microsoft.Authorization/policyDefinitions",
 "name": "Deploy-Nsg-FlowLogs"
}